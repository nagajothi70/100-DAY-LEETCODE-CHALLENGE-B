class Solution {
    public String smallestEquivalentString(String s1, String s2, String baseStr) {
        int[] parent = new int[26];

        for (int i = 0; i < 26; i++) {
            parent[i] = i;
        }

        for (int i = 0; i < s1.length(); i++) {
            int root1 = find(parent, s1.charAt(i) - 'a');
            int root2 = find(parent, s2.charAt(i) - 'a');
            if (root1 != root2) {
                if (root1 < root2) {
                    parent[root2] = root1;
                } else {
                    parent[root1] = root2;
                }
            }
        }

        StringBuilder result = new StringBuilder();
        for (char c : baseStr.toCharArray()) {
            result.append((char) (find(parent, c - 'a') + 'a'));
        }

        return result.toString();
    }

    private static int find(int[] parent, int x) {
        if (parent[x] != x) {
            parent[x] = find(parent, parent[x]);
        }
        return parent[x];
    }

    
}
